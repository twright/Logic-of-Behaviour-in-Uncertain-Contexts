/* Generated by Cython 0.28.5 */

#ifndef __PYX_HAVE__flowstar__poly
#define __PYX_HAVE__flowstar__poly

struct poly;

/* "flowstar/poly.pxd":35
 *     cdef interval_time_fn poly_time_fn (const Polynomial & p)
 * 
 * cdef public class Poly[object poly, type polyType]:             # <<<<<<<<<<<<<<
 *     cdef api Polynomial c_poly
 *     cdef api dict vars
 */
struct poly {
  PyObject_HEAD
  flowstar::Polynomial c_poly;
  PyObject *vars;
};

#ifndef __PYX_HAVE_API__flowstar__poly

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C DL_IMPORT(PyTypeObject) polyType;

#endif /* !__PYX_HAVE_API__flowstar__poly */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initpoly(void);
#else
PyMODINIT_FUNC PyInit_poly(void);
#endif

#endif /* !__PYX_HAVE__flowstar__poly */
