species E = e(l) -> x@l -> E;

species S = s(l) -> p@l -> P;

species P = 0;

species K = bek -> K;

species Em = e -> Em;

species Sm = s -> P;

affinity network M1sep(m1, k2) = {
  bek || e || s at rate MA(1);
  x | r at rate MA(m1);
  x | p at rate MA(k2);
}

affinity network M1(k1,m1,k2) = {
  e || s at rate MA(k1);
  x | r at rate MA(m1);
  x | p at rate MA(k2);
}

affinity network M2(m1,k2) = {
  x | r at rate MA(m1);
  x | p at rate MA(k2);
}

kinetic law UMM1(k1, m1, k2, i; e, s)
    = k2 * (k1 * e * s - i) / (k1 * s + m1);


kinetic law UMM2(k1, m1, k2, i; e, s)
    = k2 * (k1 * e * s - i)/(k2 + m1 + k1*s);

affinity network UAF1(k1, m1, k2, i) = {
    e || s at rate UMM1(k1, m1, k2, i);
}

affinity network UAF2(k1, m1, k2, i) = {
    e || s at rate UMM2(k1, m1, k2, i);
}

process Pi1 = [0.1] E || [1.0] S with network M1(1.0, 0.1, 0.5);

process Pi2 = [0.1] E || [1.0] S with network M2(0.1, 0.5);

process Pi3 = [1.0] S with network M1(1.0, 0.1, 0.5);

process Pi4 = [0.1] E || [1.0] S with network M1([1.0 .. 1.1], 0.1, 0.5);
